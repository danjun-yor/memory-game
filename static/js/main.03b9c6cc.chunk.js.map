{"version":3,"sources":["MyClient/index.tsx","Contexts/UserContext.tsx","Pages/SignIn/index.tsx","Pages/SignUp/index.tsx","Functions/index.ts","Components/Card/index.tsx","Components/Deck/index.tsx","history.ts","Components/LinkButton/index.tsx","Pages/Game/index.tsx","App.tsx","index.tsx"],"names":["uri","fetchOptions","requestWithGraphQL","query","a","token","localStorage","getItem","fetch","method","headers","Accept","authorization","body","JSON","stringify","res","json","data","errors","this","UserContext","React","user","updateUser","emailRef","useRef","passwordRef","history","useHistory","isSubmitting","onSubmit","e","preventDefault","email","current","value","password","alert","focus","MyClient","message","signIn","setItem","push","Consumer","className","name","htmlFor","type","id","ref","nameRef","shuffle","o","sort","Math","random","Card","props","size","card","isFlipping","isOpened","isChecked","shouldShow","handleCardClick","getClassName","onClick","icon","Component","allIcons","faBicycle","faCube","faBolt","faBomb","faBone","faLeaf","faPlane","faAnchor","faBus","faGlobe","faWineGlass","faTv","faTaxi","faArchway","faAppleAlt","faBacon","faCookie","faFish","faPizzaSlice","faLemon","faIceCream","faSeedling","faCheese","faCarrot","faCandyCane","faChessBishop","faChessKing","faChessPawn","faChessKnight","faChessQueen","faDice","faGuitar","faHeadphones","faMusic","faHeart","faStar","faBroom","faCat","faGhost","faCrow","faMask","faBurn","faCannabis","faBong","faPlus","faShoppingBag","faStore","faTshirt","Deck","state","cards","getNewCards","stage","mapSize","getMapSize","onNextStage","checkCardIds","floor","sqrt","pow","slice","totalCardCount","emptyCards","Array","length","fill","map","v","i","ids","startFlip","Promise","resolve","reject","setTimeout","finishFlip","showCard","setState","flip","every","succCnt","failCnt","shouldFilpCardIds","pairCardIds","splice","iconName","scoreUp","scoreDown","stageUp","cardIds","key","bind","createBrowserHistory","LinkButton","location","match","staticContext","to","rest","event","Game","score","time","timerID","setInterval","startTimer","clearInterval","cnt","style","marginRight","seconds","hh","String","mm","padStart","ss","formatSeconds","App","getUser","jwt","verify","Provider","exact","path","component","SignIn","SignUp","library","add","fas","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03b9c6cc.chunk.js","sourcesContent":["export class MyClient {\n  uri: string;\n  fetchOptions: RequestInit;\n\n  constructor({\n    uri,\n    fetchOptions\n  }: {\n    uri: string;\n    fetchOptions?: RequestInit;\n  }) {\n    this.uri = uri;\n    this.fetchOptions = { ...fetchOptions };\n  }\n\n  requestWithGraphQL = async (query: string) => {\n    const token = localStorage.getItem(\"token\");\n\n    const res = await fetch(this.uri, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        authorization: token ? `Bearer ${token}` : \"\"\n      },\n\n      body: JSON.stringify({\n        query\n      }),\n\n      ...this.fetchOptions\n    });\n\n    const { data, errors } = await res.json();\n\n    return { data, errors };\n  };\n}\n\nexport default new MyClient({\n  uri: \"http://localhost:4000\"\n});\n","import * as React from \"react\";\n\nexport type User = {\n  iat: number;\n  email: string;\n  id: string;\n  name: string;\n  password: string;\n  records: Array<any>;\n  createdAt: string;\n  updatedAt: string | null;\n};\n\nexport type UserContextInput = {\n  user: Partial<User> | null;\n  updateUser: () => void;\n};\n\nexport const UserContext = React.createContext<UserContextInput>({\n  user: {},\n  updateUser: () => {}\n});\n","import React, { useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./styles.scss\";\nimport MyClient from \"../../MyClient\";\nimport { UserContext } from \"../../Contexts/UserContext\";\n\nexport default () => {\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n  const history = useHistory();\n\n  let isSubmitting = false;\n\n  const onSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const email = emailRef.current!.value;\n    const password = passwordRef.current!.value;\n    if (!email) {\n      alert(\"이메일을 입력해주세요.\");\n      emailRef.current!.focus();\n      return;\n    }\n    if (!password) {\n      alert(\"비밀번호를 입력해주세요.\");\n      passwordRef.current!.focus();\n      return;\n    }\n\n    if (isSubmitting) {\n      return;\n    }\n\n    isSubmitting = true;\n    const { data, errors } = await MyClient.requestWithGraphQL(`mutation { \n      signIn(email: \"${email}\", password: \"${password}\") {\n        token\n      }\n   }`);\n    isSubmitting = false;\n\n    if (errors) {\n      alert(errors[0].message);\n      return;\n    }\n    const { token } = data.signIn;\n    localStorage.setItem(\"token\", token);\n\n    history.push(\"/\");\n  };\n\n  return (\n    <UserContext.Consumer>\n      {({ user, updateUser }) => {\n        return (\n          <div className=\"container auth-container\">\n            <form\n              name=\"sign-in-form\"\n              className=\"sign-in-form\"\n              onSubmit={e => {\n                onSubmit(e);\n                updateUser();\n              }}\n            >\n              <div className=\"row\">\n                <label htmlFor=\"email\">이메일</label>\n                <input type=\"text\" name=\"email\" id=\"email\" ref={emailRef} />\n              </div>\n              <div className=\"row\">\n                <label htmlFor=\"password\">비밀번호</label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  ref={passwordRef}\n                />\n              </div>\n              <input type=\"submit\" className=\"btn-signin\" value=\"로그인\" />\n            </form>\n          </div>\n        );\n      }}\n    </UserContext.Consumer>\n  );\n};\n","import React, { useRef } from \"react\";\nimport \"./styles.scss\";\nimport MyClient from \"../../MyClient\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default () => {\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n  const nameRef = useRef<HTMLInputElement>(null);\n  const history = useHistory();\n\n  let isSubmitting = false;\n\n  const onSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const email = emailRef.current!.value;\n    const password = passwordRef.current!.value;\n    const name = nameRef.current!.value;\n    if (!email) {\n      alert(\"이메일을 입력해주세요.\");\n      emailRef.current!.focus();\n      return;\n    }\n    if (!password) {\n      alert(\"비밀번호를 입력해주세요.\");\n      passwordRef.current!.focus();\n      return;\n    }\n    if (!name) {\n      alert(\"이름를 입력해주세요.\");\n      nameRef.current!.focus();\n      return;\n    }\n\n    if (isSubmitting) {\n      return;\n    }\n\n    isSubmitting = true;\n    const { errors } = await MyClient.requestWithGraphQL(`mutation { \n      signUp(email: \"${email}\", password: \"${password}\", name: \"${name}\") {\n        token\n      }\n   }`);\n    isSubmitting = false;\n\n    if (errors) {\n      alert(errors[0].message);\n      return;\n    }\n\n    alert(\"회원가입이 완료되었습니다.\\n다시 로그인 해주시기 바랍니다.\");\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"container auth-container\">\n      <form name=\"sign-up-form\" className=\"sign-up-form\" onSubmit={onSubmit}>\n        <div className=\"row\">\n          <label htmlFor=\"email\">이메일</label>\n          <input type=\"text\" name=\"email\" id=\"email\" ref={emailRef} />\n        </div>\n        <div className=\"row\">\n          <label htmlFor=\"password\">비밀번호</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            ref={passwordRef}\n          />\n        </div>\n        <div className=\"row\">\n          <label htmlFor=\"name\">이름</label>\n          <input type=\"text\" name=\"name\" id=\"name\" ref={nameRef} />\n        </div>\n        <input type=\"submit\" className=\"btn-signup\" value=\"회원가입\" />\n      </form>\n    </div>\n  );\n};\n","export function shuffle<T>(o: Array<T>): Array<T> {\n  o.sort(function() {\n    return 0.5 - Math.random();\n  });\n  return o;\n}\n\nexport function formatSeconds(seconds: number) {\n  const hh = String(Math.floor(seconds / 3600));\n\n  const rest = seconds % 3600;\n  const mm = String(Math.floor(rest / 60)).padStart(2, \"0\");\n\n  const ss = String(seconds % 60).padStart(2, \"0\");\n\n  return `${hh}:${mm}:${ss}`;\n}\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { tCard } from \"../Deck\";\nimport \"./styles.scss\";\n\ninterface Props {\n  size: number;\n  card: tCard;\n  handleCardClick: (i: number) => void;\n}\n\ninterface State {}\n\nexport default class Card extends Component<Props, State> {\n  getClassName() {\n    const {\n      size,\n      card: { isFlipping, isOpened, isChecked, shouldShow, card }\n    } = this.props;\n\n    return `card x${size} ${\n      isFlipping ? (isOpened ? \"reverse-flip\" : \"flip\") : \"\"\n    }${shouldShow || !card ? \" show open\" : \"\"}${!card ? \" disabled\" : \"\"}${\n      isChecked ? \" checked\" : \"\"\n    }`;\n  }\n\n  render() {\n    const { card, handleCardClick } = this.props;\n\n    return (\n      <li\n        className={this.getClassName()}\n        onClick={(e: React.MouseEvent) => {\n          // const target = e.target as HTMLElement;\n          handleCardClick(card.id);\n        }}\n      >\n        {card[\"card\"] ? <FontAwesomeIcon icon={card.card} /> : \"\"}\n      </li>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./styles.scss\";\nimport {\n  faBicycle,\n  faCube,\n  faBolt,\n  faBomb,\n  faBone,\n  faLeaf,\n  faPlane,\n  faAnchor,\n  faBus,\n  faGlobe,\n  faWineGlass,\n  faTv,\n  faTaxi,\n  faArchway,\n  faAppleAlt,\n  faBacon,\n  faCookie,\n  faFish,\n  faPizzaSlice,\n  faLemon,\n  faIceCream,\n  faSeedling,\n  faCheese,\n  faCarrot,\n  faCandyCane,\n  faChessBishop,\n  faChessKing,\n  faChessPawn,\n  faChessKnight,\n  faChessQueen,\n  faDice,\n  faGuitar,\n  faHeadphones,\n  faMusic,\n  faHeart,\n  faStar,\n  faBroom,\n  faCat,\n  faGhost,\n  faCrow,\n  faMask,\n  faBurn,\n  faCannabis,\n  faBong,\n  faPlus,\n  faShoppingBag,\n  faStore,\n  faTshirt,\n  IconDefinition\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { shuffle } from \"../../Functions\";\nimport Card from \"../Card\";\n\nconst allIcons = [\n  faBicycle,\n  faCube,\n  faBolt,\n  faBomb,\n  faBone,\n  faLeaf,\n  faPlane,\n  faAnchor,\n  faBus,\n  faGlobe,\n  faWineGlass,\n  faTv,\n  faTaxi,\n  faArchway,\n  faAppleAlt,\n  faBacon,\n  faCookie,\n  faFish,\n  faPizzaSlice,\n  faLemon,\n  faIceCream,\n  faSeedling,\n  faCheese,\n  faCarrot,\n  faCandyCane,\n  faChessBishop,\n  faChessKing,\n  faChessPawn,\n  faChessKnight,\n  faChessQueen,\n  faDice,\n  faGuitar,\n  faHeadphones,\n  faMusic,\n  faHeart,\n  faStar,\n  faBroom,\n  faCat,\n  faGhost,\n  faCrow,\n  faMask,\n  faBurn,\n  faCannabis,\n  faBong,\n  faPlus,\n  faShoppingBag,\n  faStore,\n  faTshirt\n];\n\ninterface Props {\n  stage: number;\n  scoreUp: (cnt: number) => void;\n  scoreDown: (cnt: number) => void;\n  stageUp: () => void;\n}\n\ninterface State {\n  cards: Array<tCard>;\n  isFlipping: boolean;\n  mapSize: number;\n  onNextStage: boolean;\n}\n\nexport type tCard = {\n  id: number;\n  card: IconDefinition | null;\n  isOpened: boolean;\n  isFlipping: boolean;\n  shouldShow: boolean;\n  isChecked: boolean;\n};\n\nexport default class Deck extends Component<Props, State> {\n  state = {\n    cards: this.getNewCards(this.props.stage),\n    isFlipping: false,\n    mapSize: this.getMapSize(this.props.stage),\n    onNextStage: false\n  };\n\n  checkCardIds = [] as Array<number>;\n\n  getMapSize(stage: number) {\n    const value = Math.floor(Math.sqrt((stage + 2) * 2));\n    return (stage + 2) * 2 === Math.pow(value, 2) ? value : value + 1;\n  }\n\n  getNewCards(stage: number) {\n    const cards = shuffle<IconDefinition>(allIcons).slice(0, stage + 2);\n\n    /* ToDo: 카드 갯수가 nxn보다 작으면 나머지 칸을 빈카드로 채움 */\n    const mapSize = this.getMapSize(stage);\n    const totalCardCount = Math.pow(mapSize, 2);\n    const emptyCards = new Array(totalCardCount - cards.length * 2)\n      .fill(0)\n      .map((v, i) => {\n        return {\n          id: 1000 + i,\n          card: null,\n          isOpened: true,\n          isFlipping: false,\n          shouldShow: false,\n          isChecked: true\n        };\n      });\n\n    return [\n      ...shuffle<IconDefinition>([...cards, ...cards]).map((card, i) => {\n        return {\n          id: i,\n          card: card,\n          isOpened: false,\n          isFlipping: false,\n          shouldShow: false,\n          isChecked: false\n        };\n      }),\n      ...emptyCards\n    ];\n  }\n\n  flip(ids: number[]) {\n    this.startFlip(ids);\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        setTimeout(() => {\n          this.finishFlip(ids);\n          return resolve(true);\n        }, 400);\n        this.showCard(ids);\n      }, 400);\n    });\n  }\n\n  startFlip(ids: number[]) {\n    const cards = this.state.cards.slice();\n\n    for (let id of ids) {\n      if (id < cards.length && cards[id].card) {\n        cards[id].isFlipping = true;\n      }\n    }\n\n    this.setState({\n      cards\n    });\n  }\n\n  finishFlip(ids: number[]) {\n    const cards = this.state.cards.slice();\n\n    for (let id of ids) {\n      if (id < cards.length && cards[id].card) {\n        cards[id].isOpened = !cards[id].isOpened;\n        cards[id].isFlipping = false;\n      }\n    }\n\n    this.setState({\n      cards\n    });\n  }\n\n  showCard(ids: number[]) {\n    const cards = this.state.cards.slice();\n\n    for (let id of ids) {\n      if (id < cards.length && cards[id].card) {\n        cards[id].shouldShow = cards[id].isOpened ? false : true;\n      }\n    }\n\n    this.setState({\n      cards\n    });\n  }\n\n  async handleCardClick(i: number) {\n    const cards = this.state.cards.slice();\n\n    if (!cards[i]) return;\n    if (!cards[i].card) return;\n    if (cards[i].isOpened) return;\n    if (cards[i].isChecked) return;\n    if (cards[i].isFlipping) return;\n\n    const checkCardIds = this.checkCardIds;\n    checkCardIds.push(i);\n\n    await this.flip([i]);\n    // console.log(checkCardIds);\n    if (cards.every(card => !card.isFlipping)) {\n      let succCnt = 0,\n        failCnt = 0;\n      const shouldFilpCardIds = [];\n      while (checkCardIds.length >= 2) {\n        const pairCardIds = checkCardIds.splice(0, 2);\n\n        if (\n          cards[pairCardIds[0]].card!.iconName ===\n          cards[pairCardIds[1]].card!.iconName\n        ) {\n          cards[pairCardIds[0]].isChecked = true;\n          cards[pairCardIds[1]].isChecked = true;\n          succCnt++;\n        } else {\n          shouldFilpCardIds.push(...pairCardIds);\n          failCnt++;\n        }\n      }\n\n      if (shouldFilpCardIds.length > 0) {\n        await this.flip(shouldFilpCardIds);\n      }\n\n      this.props.scoreUp(succCnt);\n      this.props.scoreDown(failCnt);\n      if (cards.every(card => card.isChecked)) {\n        setTimeout(() => {\n          this.props.stageUp();\n          this.setState({\n            cards: this.getNewCards(this.props.stage),\n            mapSize: this.getMapSize(this.props.stage),\n            onNextStage: true\n          });\n        }, 800);\n      } else {\n        this.setState({\n          cards: cards\n        });\n      }\n    }\n  }\n\n  async componentDidMount() {\n    const { cards } = this.state;\n\n    const cardIds = cards.map(card => card.id);\n    await this.flip(cardIds);\n    setTimeout(async () => {\n      await this.flip(cardIds);\n    }, 1000);\n  }\n\n  async componentDidUpdate() {\n    const { onNextStage } = this.state;\n    const { cards } = this.state;\n\n    if (onNextStage) {\n      this.setState({\n        onNextStage: false\n      });\n      setTimeout(async () => {\n        const cardIds = cards.map(card => card.id);\n        await this.flip(cardIds);\n        setTimeout(async () => {\n          await this.flip(cardIds);\n        }, 1000);\n      }, 400);\n    }\n  }\n\n  render() {\n    const { cards, mapSize } = this.state;\n\n    return (\n      <section className=\"deck\">\n        <ul className=\"cards\">\n          {cards.map((card, i) => (\n            <Card\n              key={card.id}\n              size={mapSize}\n              card={card}\n              handleCardClick={this.handleCardClick.bind(this)}\n            />\n          ))}\n        </ul>\n      </section>\n    );\n  }\n}\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","import React from \"react\";\nimport \"./styles.scss\";\nimport { history } from \"../../history\";\n\nexport default function LinkButton(props: any) {\n  const { location, match, staticContext, to, onClick, ...rest } = props;\n\n  return (\n    <button\n      {...rest}\n      onClick={event => {\n        onClick && onClick(event);\n        history.push(to);\n      }}\n    />\n  );\n}\n","import React, { Component } from \"react\";\nimport \"./styles.scss\";\nimport Deck from \"../../Components/Deck\";\nimport { formatSeconds } from \"../../Functions\";\nimport LinkButton from \"../../Components/LinkButton\";\nimport { UserContext } from \"../../Contexts/UserContext\";\n\ninterface Props {}\ninterface State {}\n\nclass Game extends Component<Props, State> {\n  state = {\n    stage: 1,\n    score: 0,\n    time: 0\n  };\n\n  timerID = (0 as unknown) as NodeJS.Timeout;\n\n  // 레벨 초기화\n  initStage() {\n    this.setState({ stage: 1 });\n  }\n\n  // 레벨 업\n  stageUp() {\n    this.setState({\n      stage: this.state.stage + 1\n    });\n  }\n\n  startTimer() {\n    this.timerID = setInterval(() => {\n      this.setState({\n        time: this.state.time + 1\n      });\n    }, 1000);\n  }\n\n  componentDidMount() {\n    this.startTimer();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  scoreUp(cnt: number) {\n    this.setState({\n      score: this.state.score + 100 * cnt\n    });\n  }\n\n  scoreDown(cnt: number) {\n    this.setState({\n      score: this.state.score - 10 * cnt\n    });\n  }\n\n  render() {\n    const { stage, score, time } = this.state;\n    return (\n      <UserContext.Consumer>\n        {({ user }) => {\n          return (\n            <div className=\"App\">\n              <header>\n                <h1>짝 맞추기 게임</h1>\n                <div className=\"sign-btn-group\">\n                  {user && user[\"name\"] ? (\n                    <>\n                      <span style={{ marginRight: \"5px\" }}>{user.name}</span>\n                      <LinkButton className=\"link-btn in\">내정보</LinkButton>\n                      <LinkButton className=\"link-btn up\">로그아웃</LinkButton>\n                    </>\n                  ) : (\n                    <>\n                      <LinkButton\n                        to=\"/signin\"\n                        className=\"link-btn link-sign in\"\n                      >\n                        로그인\n                      </LinkButton>\n                      <LinkButton\n                        to=\"/signup\"\n                        className=\"link-btn link-sign up\"\n                      >\n                        회원가입\n                      </LinkButton>\n                    </>\n                  )}\n                </div>\n              </header>\n              <main>\n                <section className=\"score-panel\">\n                  <div>\n                    스테이지: <span>{stage}</span>\n                  </div>\n                  <div>\n                    점수: <span>{score}</span>\n                  </div>\n                  <div>\n                    시간: <span>{formatSeconds(time)}</span>\n                  </div>\n                </section>\n                <Deck\n                  stage={stage}\n                  scoreUp={this.scoreUp.bind(this)}\n                  scoreDown={this.scoreDown.bind(this)}\n                  stageUp={this.stageUp.bind(this)}\n                />\n              </main>\n\n              <footer></footer>\n            </div>\n          );\n        }}\n      </UserContext.Consumer>\n    );\n  }\n}\nexport default Game;\n","import React, { Component } from \"react\";\nimport \"./reset.scss\";\nimport \"./styles.scss\";\nimport jwt from \"jsonwebtoken\";\nimport { Switch, Route } from \"react-router-dom\";\nimport SignIn from \"./Pages/SignIn\";\nimport SignUp from \"./Pages/SignUp\";\nimport Game from \"./Pages/Game\";\nimport { UserContext, User, UserContextInput } from \"./Contexts/UserContext\";\n\ninterface Props {}\n\nexport interface State extends UserContextInput {}\n\nclass App extends Component<Props, State> {\n  updateUser: () => void;\n\n  constructor(props: any) {\n    super(props);\n\n    this.updateUser = () => {\n      this.setState({\n        user: this.getUser()\n      });\n    };\n\n    this.state = {\n      user: this.getUser(),\n      updateUser: this.updateUser\n    };\n  }\n\n  getUser() {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      return jwt.verify(token!, \"awesome-memory-game\") as User;\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <UserContext.Provider value={this.state}>\n        <Switch>\n          <Route exact path=\"/signin\" component={SignIn} />\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route path=\"/\" component={Game} />\n        </Switch>\n      </UserContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport \"normalize.css\";\nimport App from \"./App\";\nimport { Router } from \"react-router-dom\";\nimport { history } from \"./history\";\n\nlibrary.add(fas);\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}