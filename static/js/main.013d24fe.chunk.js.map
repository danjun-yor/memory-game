{"version":3,"sources":["Pages/SignIn/index.tsx","Pages/SignUp/index.tsx","Functions/index.ts","Components/Card/index.tsx","Components/Deck/index.tsx","history.ts","Components/LinkButton/index.tsx","Pages/Game/index.tsx","App.tsx","Apollo/Client.tsx","index.tsx"],"names":["SIGNIN_MUTATION","gql","useMutation","signInMutation","useState","emailRef","useRef","passwordRef","signIn","a","variables","email","current","password","token","data","signUp","localStorage","setItem","onSubmit","e","preventDefault","className","name","htmlFor","type","id","ref","value","SIGNUP_MUTATION","signUpMutation","console","log","getItem","nameRef","shuffle","o","sort","Math","random","Card","this","props","size","card","isFlipping","isOpened","isChecked","shouldShow","handleCardClick","getClassName","onClick","icon","Component","allIcons","faBicycle","faCube","faBolt","faBomb","faBone","faLeaf","faPlane","faAnchor","faBus","faGlobe","faWineGlass","faTv","faTaxi","faArchway","faAppleAlt","faBacon","faCookie","faFish","faPizzaSlice","faLemon","faIceCream","faSeedling","faCheese","faCarrot","faCandyCane","faChessBishop","faChessKing","faChessPawn","faChessKnight","faChessQueen","faDice","faGuitar","faHeadphones","faMusic","faHeart","faStar","faBroom","faCat","faGhost","faCrow","faMask","faBurn","faCannabis","faBong","faPlus","faShoppingBag","faStore","faTshirt","Deck","state","cards","getNewCards","stage","mapSize","getMapSize","onNextStage","checkCardIds","floor","sqrt","pow","slice","totalCardCount","emptyCards","Array","length","fill","map","v","i","ids","startFlip","Promise","resolve","reject","setTimeout","finishFlip","showCard","setState","push","flip","every","succCnt","failCnt","shouldFilpCardIds","pairCardIds","splice","iconName","scoreUp","scoreDown","stageUp","cardIds","key","bind","history","createBrowserHistory","LinkButton","location","match","staticContext","to","rest","event","Game","score","time","timerID","setInterval","startTimer","clearInterval","cnt","seconds","hh","String","mm","padStart","ss","formatSeconds","App","exact","path","component","SignIn","SignUp","render","ApolloClient","uri","request","operation","setContext","headers","authorization","library","add","fas","ReactDOM","client","Client","document","getElementById"],"mappings":"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","file":"static/js/main.013d24fe.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport \"./styles.scss\";\n\nconst SIGNIN_MUTATION = gql`\n  mutation SignInMutation($email: String!, $password: String!) {\n    signUp(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\ntype TSignUpData = {\n  name: String;\n  email: String;\n  password: String;\n};\n\nexport default () => {\n  const [signInMutation] = useMutation(SIGNIN_MUTATION);\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n\n  const signIn = async () => {\n    const {\n      data: {\n        signUp: { token }\n      }\n    } = await signInMutation({\n      variables: {\n        email: emailRef.current,\n        password: passwordRef.current\n      }\n    });\n    localStorage.setItem(\"token\", token);\n  };\n\n  const onSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    signIn();\n  };\n\n  return (\n    <div className=\"container auth-container\">\n      <form name=\"sign-in-form\" className=\"sign-in-form\" onSubmit={onSubmit}>\n        <div className=\"row\">\n          <label htmlFor=\"email\">이메일</label>\n          <input type=\"text\" name=\"email\" id=\"email\" ref={emailRef} />\n        </div>\n        <div className=\"row\">\n          <label htmlFor=\"password\">비밀번호</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            ref={passwordRef}\n          />\n        </div>\n        <input type=\"submit\" className=\"btn-signin\" value=\"로그인\" />\n      </form>\n    </div>\n  );\n};\n","import React, { useState, useRef } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport \"./styles.scss\";\n\nconst SIGNUP_MUTATION = gql`\n  mutation SignUpMutation($email: String!, $password: String!, $name: String!) {\n    signUp(email: $email, password: $password, name: $name) {\n      token\n    }\n  }\n`;\n\ntype TSignUpData = {\n  name: String;\n  email: String;\n  password: String;\n};\n\nexport default () => {\n  const [signUpMutation] = useMutation(SIGNUP_MUTATION);\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n\n  console.log(localStorage.getItem(\"token\"));\n\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n  const nameRef = useRef<HTMLInputElement>(null);\n\n  const signUp = async () => {\n    const {\n      data: {\n        signUp: { token }\n      }\n    } = await signUpMutation({\n      variables: {\n        name: nameRef.current,\n        email: emailRef.current,\n        password: passwordRef.current\n      }\n    });\n    localStorage.setItem(\"token\", token);\n  };\n\n  const onSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    signUp();\n  };\n\n  return (\n    <div className=\"container auth-container\">\n      <form name=\"sign-up-form\" className=\"sign-up-form\" onSubmit={onSubmit}>\n        <div className=\"row\">\n          <label htmlFor=\"email\">이메일</label>\n          <input type=\"text\" name=\"email\" id=\"email\" ref={emailRef} />\n        </div>\n        <div className=\"row\">\n          <label htmlFor=\"password\">비밀번호</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            ref={passwordRef}\n          />\n        </div>\n        <div className=\"row\">\n          <label htmlFor=\"name\">이름</label>\n          <input type=\"text\" name=\"name\" id=\"name\" ref={nameRef} />\n        </div>\n        <input type=\"submit\" className=\"btn-signup\" value=\"회원가입\" />\n      </form>\n    </div>\n  );\n};\n","export function shuffle<T>(o: Array<T>): Array<T> {\n  o.sort(function() {\n    return 0.5 - Math.random();\n  });\n  return o;\n}\n\nexport function formatSeconds(seconds: number) {\n  const hh = String(Math.floor(seconds / 3600));\n\n  const rest = seconds % 3600;\n  const mm = String(Math.floor(rest / 60)).padStart(2, \"0\");\n\n  const ss = String(seconds % 60).padStart(2, \"0\");\n\n  return `${hh}:${mm}:${ss}`;\n}\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { tCard } from \"../Deck\";\nimport \"./styles.scss\";\n\ninterface Props {\n  size: number;\n  card: tCard;\n  handleCardClick: (i: number) => void;\n}\n\ninterface State {}\n\nexport default class Card extends Component<Props, State> {\n  getClassName() {\n    const {\n      size,\n      card: { isFlipping, isOpened, isChecked, shouldShow, card }\n    } = this.props;\n\n    return `card x${size} ${\n      isFlipping ? (isOpened ? \"reverse-flip\" : \"flip\") : \"\"\n    }${shouldShow || !card ? \" show open\" : \"\"}${!card ? \" disabled\" : \"\"}${\n      isChecked ? \" checked\" : \"\"\n    }`;\n  }\n\n  render() {\n    const { card, handleCardClick } = this.props;\n\n    return (\n      <li\n        className={this.getClassName()}\n        onClick={(e: React.MouseEvent) => {\n          // const target = e.target as HTMLElement;\n          handleCardClick(card.id);\n        }}\n      >\n        {card[\"card\"] ? <FontAwesomeIcon icon={card.card} /> : \"\"}\n      </li>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./styles.scss\";\nimport {\n  faBicycle,\n  faCube,\n  faBolt,\n  faBomb,\n  faBone,\n  faLeaf,\n  faPlane,\n  faAnchor,\n  faBus,\n  faGlobe,\n  faWineGlass,\n  faTv,\n  faTaxi,\n  faArchway,\n  faAppleAlt,\n  faBacon,\n  faCookie,\n  faFish,\n  faPizzaSlice,\n  faLemon,\n  faIceCream,\n  faSeedling,\n  faCheese,\n  faCarrot,\n  faCandyCane,\n  faChessBishop,\n  faChessKing,\n  faChessPawn,\n  faChessKnight,\n  faChessQueen,\n  faDice,\n  faGuitar,\n  faHeadphones,\n  faMusic,\n  faHeart,\n  faStar,\n  faBroom,\n  faCat,\n  faGhost,\n  faCrow,\n  faMask,\n  faBurn,\n  faCannabis,\n  faBong,\n  faPlus,\n  faShoppingBag,\n  faStore,\n  faTshirt,\n  IconDefinition\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { shuffle } from \"../../Functions\";\nimport Card from \"../Card\";\n\nconst allIcons = [\n  faBicycle,\n  faCube,\n  faBolt,\n  faBomb,\n  faBone,\n  faLeaf,\n  faPlane,\n  faAnchor,\n  faBus,\n  faGlobe,\n  faWineGlass,\n  faTv,\n  faTaxi,\n  faArchway,\n  faAppleAlt,\n  faBacon,\n  faCookie,\n  faFish,\n  faPizzaSlice,\n  faLemon,\n  faIceCream,\n  faSeedling,\n  faCheese,\n  faCarrot,\n  faCandyCane,\n  faChessBishop,\n  faChessKing,\n  faChessPawn,\n  faChessKnight,\n  faChessQueen,\n  faDice,\n  faGuitar,\n  faHeadphones,\n  faMusic,\n  faHeart,\n  faStar,\n  faBroom,\n  faCat,\n  faGhost,\n  faCrow,\n  faMask,\n  faBurn,\n  faCannabis,\n  faBong,\n  faPlus,\n  faShoppingBag,\n  faStore,\n  faTshirt\n];\n\ninterface Props {\n  stage: number;\n  scoreUp: (cnt: number) => void;\n  scoreDown: (cnt: number) => void;\n  stageUp: () => void;\n}\n\ninterface State {\n  cards: Array<tCard>;\n  isFlipping: boolean;\n  mapSize: number;\n  onNextStage: boolean;\n}\n\nexport type tCard = {\n  id: number;\n  card: IconDefinition | null;\n  isOpened: boolean;\n  isFlipping: boolean;\n  shouldShow: boolean;\n  isChecked: boolean;\n};\n\nexport default class Deck extends Component<Props, State> {\n  state = {\n    cards: this.getNewCards(this.props.stage),\n    isFlipping: false,\n    mapSize: this.getMapSize(this.props.stage),\n    onNextStage: false\n  };\n\n  checkCardIds = [] as Array<number>;\n\n  getMapSize(stage: number) {\n    const value = Math.floor(Math.sqrt((stage + 2) * 2));\n    return (stage + 2) * 2 === Math.pow(value, 2) ? value : value + 1;\n  }\n\n  getNewCards(stage: number) {\n    const cards = shuffle<IconDefinition>(allIcons).slice(0, stage + 2);\n\n    /* ToDo: 카드 갯수가 nxn보다 작으면 나머지 칸을 빈카드로 채움 */\n    const mapSize = this.getMapSize(stage);\n    const totalCardCount = Math.pow(mapSize, 2);\n    const emptyCards = new Array(totalCardCount - cards.length * 2)\n      .fill(0)\n      .map((v, i) => {\n        return {\n          id: 1000 + i,\n          card: null,\n          isOpened: true,\n          isFlipping: false,\n          shouldShow: false,\n          isChecked: true\n        };\n      });\n\n    return [\n      ...shuffle<IconDefinition>([...cards, ...cards]).map((card, i) => {\n        return {\n          id: i,\n          card: card,\n          isOpened: false,\n          isFlipping: false,\n          shouldShow: false,\n          isChecked: false\n        };\n      }),\n      ...emptyCards\n    ];\n  }\n\n  flip(ids: number[]) {\n    this.startFlip(ids);\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        setTimeout(() => {\n          this.finishFlip(ids);\n          return resolve(true);\n        }, 400);\n        this.showCard(ids);\n      }, 400);\n    });\n  }\n\n  startFlip(ids: number[]) {\n    const cards = this.state.cards.slice();\n\n    for (let id of ids) {\n      if (id < cards.length && cards[id].card) {\n        cards[id].isFlipping = true;\n      }\n    }\n\n    this.setState({\n      cards\n    });\n  }\n\n  finishFlip(ids: number[]) {\n    const cards = this.state.cards.slice();\n\n    for (let id of ids) {\n      if (id < cards.length && cards[id].card) {\n        cards[id].isOpened = !cards[id].isOpened;\n        cards[id].isFlipping = false;\n      }\n    }\n\n    this.setState({\n      cards\n    });\n  }\n\n  showCard(ids: number[]) {\n    const cards = this.state.cards.slice();\n\n    for (let id of ids) {\n      if (id < cards.length && cards[id].card) {\n        cards[id].shouldShow = cards[id].isOpened ? false : true;\n      }\n    }\n\n    this.setState({\n      cards\n    });\n  }\n\n  async handleCardClick(i: number) {\n    const cards = this.state.cards.slice();\n\n    if (!cards[i]) return;\n    if (!cards[i].card) return;\n    if (cards[i].isOpened) return;\n    if (cards[i].isChecked) return;\n    if (cards[i].isFlipping) return;\n\n    const checkCardIds = this.checkCardIds;\n    checkCardIds.push(i);\n\n    await this.flip([i]);\n    // console.log(checkCardIds);\n    if (cards.every(card => !card.isFlipping)) {\n      let succCnt = 0,\n        failCnt = 0;\n      const shouldFilpCardIds = [];\n      while (checkCardIds.length >= 2) {\n        const pairCardIds = checkCardIds.splice(0, 2);\n\n        if (\n          cards[pairCardIds[0]].card!.iconName ===\n          cards[pairCardIds[1]].card!.iconName\n        ) {\n          cards[pairCardIds[0]].isChecked = true;\n          cards[pairCardIds[1]].isChecked = true;\n          succCnt++;\n        } else {\n          shouldFilpCardIds.push(...pairCardIds);\n          failCnt++;\n        }\n      }\n\n      if (shouldFilpCardIds.length > 0) {\n        await this.flip(shouldFilpCardIds);\n      }\n\n      this.props.scoreUp(succCnt);\n      this.props.scoreDown(failCnt);\n      if (cards.every(card => card.isChecked)) {\n        setTimeout(() => {\n          this.props.stageUp();\n          this.setState({\n            cards: this.getNewCards(this.props.stage),\n            mapSize: this.getMapSize(this.props.stage),\n            onNextStage: true\n          });\n        }, 800);\n      } else {\n        this.setState({\n          cards: cards\n        });\n      }\n    }\n  }\n\n  async componentDidMount() {\n    const { cards } = this.state;\n\n    const cardIds = cards.map(card => card.id);\n    await this.flip(cardIds);\n    setTimeout(async () => {\n      await this.flip(cardIds);\n    }, 1000);\n  }\n\n  async componentDidUpdate() {\n    const { onNextStage } = this.state;\n    const { cards } = this.state;\n\n    if (onNextStage) {\n      this.setState({\n        onNextStage: false\n      });\n      setTimeout(async () => {\n        const cardIds = cards.map(card => card.id);\n        await this.flip(cardIds);\n        setTimeout(async () => {\n          await this.flip(cardIds);\n        }, 1000);\n      }, 400);\n    }\n  }\n\n  render() {\n    const { cards, mapSize } = this.state;\n\n    return (\n      <section className=\"deck\">\n        <ul className=\"cards\">\n          {cards.map((card, i) => (\n            <Card\n              key={card.id}\n              size={mapSize}\n              card={card}\n              handleCardClick={this.handleCardClick.bind(this)}\n            />\n          ))}\n        </ul>\n      </section>\n    );\n  }\n}\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","import React, { useState } from \"react\";\nimport \"./styles.scss\";\nimport { history } from \"../../history\";\n\nexport default function LinkButton(props: any) {\n  const { location, match, staticContext, to, onClick, ...rest } = props;\n\n  return (\n    <button\n      {...rest}\n      onClick={event => {\n        onClick && onClick(event);\n        history.push(to);\n      }}\n    />\n  );\n}\n","import React, { Component } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport \"./styles.scss\";\nimport Deck from \"../../Components/Deck\";\nimport { formatSeconds } from \"../../Functions\";\nimport LinkButton from \"../../Components/LinkButton\";\n\ninterface Props {}\ninterface State {}\n\nclass Game extends Component<Props, State> {\n  state = {\n    stage: 1,\n    score: 0,\n    time: 0\n  };\n\n  timerID = (0 as unknown) as NodeJS.Timeout;\n\n  // 레벨 초기화\n  initStage() {\n    this.setState({ stage: 1 });\n  }\n\n  // 레벨 업\n  stageUp() {\n    this.setState({\n      stage: this.state.stage + 1\n    });\n  }\n\n  startTimer() {\n    this.timerID = setInterval(() => {\n      this.setState({\n        time: this.state.time + 1\n      });\n    }, 1000);\n  }\n\n  componentDidMount() {\n    this.startTimer();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  scoreUp(cnt: number) {\n    this.setState({\n      score: this.state.score + 100 * cnt\n    });\n  }\n\n  scoreDown(cnt: number) {\n    this.setState({\n      score: this.state.score - 10 * cnt\n    });\n  }\n\n  render() {\n    const { stage, score, time } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>짝 맞추기 게임</h1>\n          <LinkButton to=\"/login\" className=\"login-link\">\n            로그인\n          </LinkButton>\n        </header>\n        <main>\n          <section className=\"score-panel\">\n            <div>\n              스테이지: <span>{stage}</span>\n            </div>\n            <div>\n              점수: <span>{score}</span>\n            </div>\n            <div>\n              시간: <span>{formatSeconds(time)}</span>\n            </div>\n          </section>\n          <Deck\n            stage={stage}\n            scoreUp={this.scoreUp.bind(this)}\n            scoreDown={this.scoreDown.bind(this)}\n            stageUp={this.stageUp.bind(this)}\n          />\n        </main>\n\n        <footer></footer>\n      </div>\n    );\n  }\n}\nexport default Game;\n","import React, { Component } from \"react\";\nimport \"./reset.scss\";\nimport \"./styles.scss\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport SignIn from \"./Pages/SignIn\";\nimport SignUp from \"./Pages/SignUp\";\nimport Game from \"./Pages/Game\";\n\nconst App: React.FC = () => (\n  <Switch>\n    <Route exact path=\"/signin\" component={SignIn} />\n    <Route exact path=\"/signup\" component={SignUp} />\n    <Route exact path=\"/\" render={() => <Game />} />\n  </Switch>\n);\n\nexport default App;\n","import ApolloClient from \"apollo-boost\";\n\nexport default new ApolloClient({\n  uri: \"http://localhost:4000\",\n  request: operation => {\n    const token = localStorage.getItem(\"token\");\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : \"\"\n      }\n    });\n  }\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport \"normalize.css\";\nimport App from \"./App\";\nimport Client from \"./Apollo/Client\";\nimport { Router } from \"react-router-dom\";\nimport { history } from \"./history\";\n\nlibrary.add(fas);\n\nReactDOM.render(\n  <ApolloProvider client={Client}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}